// <auto-generated>
// This code was auto-generated.
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
// </auto-generated>
import { PlaybackInformation } from "@src/model/PlaybackInformation";
export class PlaybackInformationSerializer {
    public static fromJson(json: any): PlaybackInformation {
        const obj = new PlaybackInformation(); 
        this.fillFromJson(obj, json); 
        return obj; 
    }
    public static fillFromJson(obj: PlaybackInformation, json: any): void {
        if (json) {
            for (const $k in json) {
                this.setProperty(obj, $k.toLowerCase(), json[$k]);
            }
        } 
    }
    public static toJson(obj: PlaybackInformation | null): any {
        if (!obj) {
            return null;
        } 
        const json: any = {}; 
        this.fillToJson(obj, json); 
        return json; 
    }
    public static fillToJson(obj: PlaybackInformation, json: any): void {
        json.volume = obj.volume; 
        json.balance = obj.balance; 
        json.port = obj.port; 
        json.program = obj.program; 
        json.primaryChannel = obj.primaryChannel; 
        json.secondaryChannel = obj.secondaryChannel; 
        json.isMute = obj.isMute; 
        json.isSolo = obj.isSolo; 
    }
    public static setProperty(obj: PlaybackInformation, property: string, value: any): boolean {
        switch (property) {
            case "volume":
                obj.volume = value;
                return true;
            case "balance":
                obj.balance = value;
                return true;
            case "port":
                obj.port = value;
                return true;
            case "program":
                obj.program = value;
                return true;
            case "primarychannel":
                obj.primaryChannel = value;
                return true;
            case "secondarychannel":
                obj.secondaryChannel = value;
                return true;
            case "ismute":
                obj.isMute = value;
                return true;
            case "issolo":
                obj.isSolo = value;
                return true;
        } 
        return false; 
    }
}

