// <auto-generated>
// This code was auto-generated.
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
// </auto-generated>
import { Chord } from "@src/model/Chord";
export class ChordSerializer {
    public static fromJson(json: any): Chord {
        const obj = new Chord(); 
        this.fillFromJson(obj, json); 
        return obj; 
    }
    public static fillFromJson(obj: Chord, json: any): void {
        if (json) {
            for (const $k in json) {
                this.setProperty(obj, $k.toLowerCase(), json[$k]);
            }
        } 
    }
    public static toJson(obj: Chord | null): any {
        if (!obj) {
            return null;
        } 
        const json: any = {}; 
        this.fillToJson(obj, json); 
        return json; 
    }
    public static fillToJson(obj: Chord, json: any): void {
        json.name = obj.name; 
        json.firstFret = obj.firstFret; 
        json.strings = obj.strings.slice(); 
        json.barreFrets = obj.barreFrets.slice(); 
        json.showName = obj.showName; 
        json.showDiagram = obj.showDiagram; 
        json.showFingering = obj.showFingering; 
    }
    public static setProperty(obj: Chord, property: string, value: any): boolean {
        switch (property) {
            case "name":
                obj.name = value;
                return true;
            case "firstfret":
                obj.firstFret = value;
                return true;
            case "strings":
                obj.strings = value.slice();
                return true;
            case "barrefrets":
                obj.barreFrets = value.slice();
                return true;
            case "showname":
                obj.showName = value;
                return true;
            case "showdiagram":
                obj.showDiagram = value;
                return true;
            case "showfingering":
                obj.showFingering = value;
                return true;
        } 
        return false; 
    }
}

