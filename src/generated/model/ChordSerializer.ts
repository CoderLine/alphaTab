// <auto-generated>
// This code was auto-generated.
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
// </auto-generated>
import { Chord } from "@src/model/Chord";
import { IJsonReader } from "@src/io/IJsonReader";
import { JsonValueType } from "@src/io/IJsonReader";
import { IJsonWriter } from "@src/io/IJsonWriter";
export class ChordSerializer {
    public static fromJson(obj: Chord, reader: IJsonReader): void {
        if (reader.currentValueType !== JsonValueType.Object) {
            return;
        } 
        while (reader.nextProperty()) {
            this.setProperty(obj, reader.readPropertyName().toLowerCase(), reader);
        } 
    }
    public static toJson(obj: Chord | null, writer: IJsonWriter): void {
        if (!obj) {
            writer.writeNull();
            return;
        } 
        writer.writeStartObject(); 
        writer.writePropertyName("name"); 
        writer.writeString(obj.name); 
        writer.writePropertyName("firstFret"); 
        writer.writeNumber(obj.firstFret); 
        writer.writePropertyName("strings"); 
        writer.writeNumberArray(obj.strings); 
        writer.writePropertyName("barreFrets"); 
        writer.writeNumberArray(obj.barreFrets); 
        writer.writePropertyName("showName"); 
        writer.writeBoolean(obj.showName); 
        writer.writePropertyName("showDiagram"); 
        writer.writeBoolean(obj.showDiagram); 
        writer.writePropertyName("showFingering"); 
        writer.writeBoolean(obj.showFingering); 
        writer.writeEndObject(); 
    }
    public static setProperty(obj: Chord, property: string, reader: IJsonReader): boolean {
        switch (property) {
            case "name":
                obj.name = (reader.readString()!);
                return true;
            case "firstfret":
                obj.firstFret = (reader.readNumber()!);
                return true;
            case "strings":
                obj.strings = (reader.readNumberArray()!);
                return true;
            case "barrefrets":
                obj.barreFrets = (reader.readNumberArray()!);
                return true;
            case "showname":
                obj.showName = (reader.readBoolean()!);
                return true;
            case "showdiagram":
                obj.showDiagram = (reader.readBoolean()!);
                return true;
            case "showfingering":
                obj.showFingering = (reader.readBoolean()!);
                return true;
        } 
        return false; 
    }
}

