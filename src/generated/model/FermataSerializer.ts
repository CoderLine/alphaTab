// <auto-generated>
// This code was auto-generated.
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
// </auto-generated>
import { Fermata } from "@src/model/Fermata";
import { FermataType } from "@src/model/Fermata";
export class FermataSerializer {
    public static fromJson(json: any): Fermata {
        const obj = new Fermata(); 
        this.fillFromJson(obj, json); 
        return obj; 
    }
    public static fillFromJson(obj: Fermata, json: any): void {
        if (json) {
            for (const $k in json) {
                this.setProperty(obj, $k.toLowerCase(), json[$k]);
            }
        } 
    }
    public static toJson(obj: Fermata | null): any {
        if (!obj) {
            return null;
        } 
        const json: any = {}; 
        this.fillToJson(obj, json); 
        return json; 
    }
    public static fillToJson(obj: Fermata, json: any): void {
        json.type = obj.type; 
        json.length = obj.length; 
    }
    public static setProperty(obj: Fermata, property: string, value: any): boolean {
        switch (property) {
            case "type":
                obj.type = isNaN(parseInt(value)) ? FermataType[Object.keys(FermataType).find($k => $k.toLowerCase() === value.toLowerCase()) as keyof typeof FermataType] : parseInt(value);
                return true;
            case "length":
                obj.length = value;
                return true;
        } 
        return false; 
    }
}

