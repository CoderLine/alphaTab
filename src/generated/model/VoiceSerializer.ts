// <auto-generated>
// This code was auto-generated.
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
// </auto-generated>
import { Voice } from "@src/model/Voice";
import { BeatSerializer } from "@src/generated/model/BeatSerializer";
export class VoiceSerializer {
    public static fromJson(json: any): Voice {
        const obj = new Voice(); 
        this.fillFromJson(obj, json); 
        return obj; 
    }
    public static fillFromJson(obj: Voice, json: any): void {
        if (json) {
            for (const $k in json) {
                this.setProperty(obj, $k.toLowerCase(), json[$k]);
            }
        } 
    }
    public static toJson(obj: Voice | null): any {
        if (!obj) {
            return null;
        } 
        const json: any = {}; 
        this.fillToJson(obj, json); 
        return json; 
    }
    public static fillToJson(obj: Voice, json: any): void {
        json.index = obj.index; 
        json.beats = obj.beats.map($li => BeatSerializer.toJson($li)); 
        json.isEmpty = obj.isEmpty; 
    }
    public static setProperty(obj: Voice, property: string, value: any): boolean {
        switch (property) {
            case "index":
                obj.index = value;
                return true;
            case "beats":
                obj.beats = [];
                for (const $li of value)
                    obj.addBeat(BeatSerializer.fromJson($li));
                return true;
            case "isempty":
                obj.isEmpty = value;
                return true;
        } 
        return false; 
    }
}

