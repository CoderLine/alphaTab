// <auto-generated>
// This code was auto-generated.
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
// </auto-generated>
import { LayoutMode } from "@src/LayoutMode";
import { StaveProfile } from "@src/StaveProfile";
import { RenderingResourcesJson } from "./RenderingResourcesJson";
import { SystemsLayoutMode } from "@src/DisplaySettings";
/**
 * The display settings control how the general layout and display of alphaTab is done.
 * @json
 * @json_declaration
 * @target web
 */
export interface DisplaySettingsJson {
    /**
     * Sets the zoom level of the rendered notation
     */
    scale?: number;
    /**
     * The default stretch force to use for layouting.
     */
    stretchForce?: number;
    /**
     * The layouting mode used to arrange the the notation.
     */
    layoutMode?: LayoutMode | keyof typeof LayoutMode;
    /**
     * The stave profile to use.
     */
    staveProfile?: StaveProfile | keyof typeof StaveProfile;
    /**
     * Limit the displayed bars per row.
     */
    barsPerRow?: number;
    /**
     * The bar start number to start layouting with. Note that this is the bar number and not an index!
     */
    startBar?: number;
    /**
     * The amount of bars to render overall.
     */
    barCount?: number;
    /**
     * The number of bars that should be rendered per partial. This setting is not used by all layouts.
     */
    barCountPerPartial?: number;
    /**
     * Whether the last system (row) should be also justified to the whole width of the music sheet.
     * (applies only for page layout).
     */
    justifyLastSystem?: boolean;
    /**
     * Gets or sets the resources used during rendering. This defines all fonts and colors used.
     * @json_partial_names
     */
    resources?: RenderingResourcesJson;
    /**
     * Gets or sets the padding between the music notation and the border.
     */
    padding?: number[];
    /**
     * Gets or sets the top padding applied to first system.
     */
    firstSystemPaddingTop?: number;
    /**
     * Gets or sets the top padding applied to systems.
     */
    systemPaddingTop?: number;
    /**
     * Gets or sets the bottom padding applied to systems.
     */
    systemPaddingBottom?: number;
    /**
     * Gets or sets the bottom padding applied to last system.
     */
    lastSystemPaddingBottom?: number;
    /**
     * Gets or sets the padding left to the track name label of the system.
     */
    systemLabelPaddingLeft?: number;
    /**
     * Gets or sets the padding right to the track name label of the system.
     */
    systemLabelPaddingRight?: number;
    /**
     * Gets or sets the padding between the accolade bar and the start of the bar itself.
     */
    accoladeBarPaddingRight?: number;
    /**
     * Gets or sets the top padding applied to main notation staffs.
     */
    notationStaffPaddingTop?: number;
    /**
     * Gets or sets the bottom padding applied to main notation staffs.
     */
    notationStaffPaddingBottom?: number;
    /**
     * Gets or sets the top padding applied to effect annotation staffs.
     */
    effectStaffPaddingTop?: number;
    /**
     * Gets or sets the bottom padding applied to effect annotation staffs.
     */
    effectStaffPaddingBottom?: number;
    /**
     * Gets how the systems should be layed out.
     */
    systemsLayoutMode?: SystemsLayoutMode | keyof typeof SystemsLayoutMode;
}
