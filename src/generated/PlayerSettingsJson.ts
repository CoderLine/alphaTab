// <auto-generated>
// This code was auto-generated.
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
// </auto-generated>
import { PlayerOutputMode } from "@src/PlayerSettings";
import { ScrollMode } from "@src/PlayerSettings";
import { VibratoPlaybackSettingsJson } from "./VibratoPlaybackSettingsJson";
import { SlidePlaybackSettingsJson } from "./SlidePlaybackSettingsJson";
/**
 * The player settings control how the audio playback and UI is behaving.
 * @json
 * @json_declaration
 * @target web
 */
export interface PlayerSettingsJson {
    /**
     * Gets or sets the URL of the sound font to be loaded.
     */
    soundFont?: string | null;
    /**
     * Gets or sets the element that should be used for scrolling.
     * @target web
     * @json_read_only
     */
    scrollElement?: string | HTMLElement;
    /**
     * Gets or sets which output mode alphaTab should use.
     * @target web
     */
    outputMode?: PlayerOutputMode | keyof typeof PlayerOutputMode;
    /**
     * Gets or sets whether the player should be enabled.
     */
    enablePlayer?: boolean;
    /**
     * Gets or sets whether playback cursors should be displayed.
     */
    enableCursor?: boolean;
    /**
     * Gets or sets whether the beat cursor should be animated or just ticking.
     */
    enableAnimatedBeatCursor?: boolean;
    /**
     * Gets or sets whether the notation elements of the currently played beat should be
     * highlighted.
     */
    enableElementHighlighting?: boolean;
    /**
     * Gets or sets alphaTab should provide user interaction features to
     * select playback ranges and jump to the playback position by click (aka. seeking).
     */
    enableUserInteraction?: boolean;
    /**
     * Gets or sets the X-offset to add when scrolling.
     */
    scrollOffsetX?: number;
    /**
     * Gets or sets the Y-offset to add when scrolling
     */
    scrollOffsetY?: number;
    /**
     * Gets or sets the mode how to scroll.
     */
    scrollMode?: ScrollMode | keyof typeof ScrollMode;
    /**
     * Gets or sets how fast the scrolling to the new position should happen (in milliseconds)
     */
    scrollSpeed?: number;
    /**
     * Gets or sets whether the native browser smooth scroll mechanism should be used over a custom animation.
     * @target web
     */
    nativeBrowserSmoothScroll?: boolean;
    /**
     * Gets or sets the bend duration in milliseconds for songbook bends.
     */
    songBookBendDuration?: number;
    /**
     * Gets or sets the duration of whammy dips in milliseconds for songbook whammys.
     */
    songBookDipDuration?: number;
    /**
     * Gets or sets the settings on how the vibrato audio is generated.
     * @json_partial_names
     */
    vibrato?: VibratoPlaybackSettingsJson;
    /**
     * Gets or sets the setitngs on how the slide audio is generated.
     * @json_partial_names
     */
    slide?: SlidePlaybackSettingsJson;
    /**
     * Gets or sets whether the triplet feel should be applied/played during audio playback.
     */
    playTripletFeel?: boolean;
    /**
     * Gets or sets how many milliseconds of audio samples should be buffered in total.
     * Larger buffers cause a delay from when audio settings like volumes will be applied.
     * Smaller buffers can cause audio crackling due to constant buffering that is happening.
     */
    bufferTimeInMilliseconds?: number;
}
