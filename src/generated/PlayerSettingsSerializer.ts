// <auto-generated>
// This code was auto-generated.
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
// </auto-generated>
import { PlayerSettings } from "@src/PlayerSettings";
import { IJsonReader } from "@src/io/IJsonReader";
import { JsonValueType } from "@src/io/IJsonReader";
import { IJsonWriter } from "@src/io/IJsonWriter";
import { ScrollMode } from "@src/PlayerSettings";
export class PlayerSettingsSerializer {
    public static fromJson(obj: PlayerSettings, reader: IJsonReader): void {
        if (reader.currentValueType !== JsonValueType.Object) {
            return;
        } 
        while (reader.nextProperty()) {
            this.setProperty(obj, reader.readPropertyName().toLowerCase(), reader);
        } 
    }
    public static toJson(obj: PlayerSettings | null, writer: IJsonWriter): void {
        if (!obj) {
            writer.writeNull();
            return;
        } 
        writer.writeStartObject(); 
        writer.writePropertyName("soundFont"); 
        writer.writeString(obj.soundFont); 
        writer.writePropertyName("scrollElement"); 
        writer.writeString(obj.scrollElement); 
        writer.writePropertyName("enablePlayer"); 
        writer.writeBoolean(obj.enablePlayer); 
        writer.writePropertyName("enableCursor"); 
        writer.writeBoolean(obj.enableCursor); 
        writer.writePropertyName("enableUserInteraction"); 
        writer.writeBoolean(obj.enableUserInteraction); 
        writer.writePropertyName("scrollOffsetX"); 
        writer.writeNumber(obj.scrollOffsetX); 
        writer.writePropertyName("scrollOffsetY"); 
        writer.writeNumber(obj.scrollOffsetY); 
        writer.writePropertyName("scrollMode"); 
        writer.writeEnum(obj.scrollMode); 
        writer.writePropertyName("scrollSpeed"); 
        writer.writeNumber(obj.scrollSpeed); 
        writer.writePropertyName("songBookBendDuration"); 
        writer.writeNumber(obj.songBookBendDuration); 
        writer.writePropertyName("songBookDipDuration"); 
        writer.writeNumber(obj.songBookDipDuration); 
        writer.writePropertyName("playTripletFeel"); 
        writer.writeBoolean(obj.playTripletFeel); 
        writer.writeEndObject(); 
    }
    public static setProperty(obj: PlayerSettings, property: string, reader: IJsonReader): boolean {
        switch (property) {
            case "soundfont":
                obj.soundFont = reader.readString();
                return true;
            case "scrollelement":
                obj.scrollElement = (reader.readString()!);
                return true;
            case "enableplayer":
                obj.enablePlayer = (reader.readBoolean()!);
                return true;
            case "enablecursor":
                obj.enableCursor = (reader.readBoolean()!);
                return true;
            case "enableuserinteraction":
                obj.enableUserInteraction = (reader.readBoolean()!);
                return true;
            case "scrolloffsetx":
                obj.scrollOffsetX = (reader.readNumber()!);
                return true;
            case "scrolloffsety":
                obj.scrollOffsetY = (reader.readNumber()!);
                return true;
            case "scrollmode":
                obj.scrollMode = (reader.readEnum<ScrollMode>(ScrollMode)!);
                return true;
            case "scrollspeed":
                obj.scrollSpeed = (reader.readNumber()!);
                return true;
            case "songbookbendduration":
                obj.songBookBendDuration = (reader.readNumber()!);
                return true;
            case "songbookdipduration":
                obj.songBookDipDuration = (reader.readNumber()!);
                return true;
            case "playtripletfeel":
                obj.playTripletFeel = (reader.readBoolean()!);
                return true;
        } 
        return false; 
    }
}

