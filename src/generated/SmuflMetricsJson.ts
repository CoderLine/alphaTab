// <auto-generated>
// This code was auto-generated.
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
// </auto-generated>
import { Duration } from "@src/model/Duration";
import { MusicFontSymbol } from "@src/model/MusicFontSymbol";
import { SmuflStemInfoJson } from "@src/generated/SmuflStemInfoJson";
/**
 * This class holds all SMuFL metrics we use in alphaTab like sizes,
 * spacings etc.
 * @json
 * @json_declaration
 * @target web
 */
export interface SmuflMetricsJson {
    /**
     * The font size of the music font in pixel.
     * @internal
     */
    musicFontSize?: number;
    oneStaffSpace?: number;
    tabLineSpacing?: number;
    barlineSeparation?: number;
    beamSpacing?: number;
    beamThickness?: number;
    dashedBarlineDashLength?: number;
    dashedBarlineGapLength?: number;
    dashedBarlineThickness?: number;
    legerLineThickness?: number;
    legerLineExtension?: number;
    repeatBarlineDotSeparation?: number;
    repeatEndingLineThickness?: number;
    staffLineThickness?: number;
    stemThickness?: number;
    thickBarlineThickness?: number;
    thinBarlineThickness?: number;
    thinThickBarlineSeparation?: number;
    effectBandSeparation?: number;
    tabNumberSpacePadding?: number;
    numberedBarRendererBarSize?: number;
    numberedBarRendererBarSpacing?: number;
    directionsContainerPadding?: number;
    leftHandTappingPadding?: number;
    multiBarRestPadding?: number;
    trillTextPadding?: number;
    numberedBeatPostAccidentalPadding?: number;
    numberedBarRendererPreTimeSignaturePadding?: number;
    scoreBarRendererPreTimeSignaturePadding?: number;
    slashBarRendererPreTimeSignaturePadding?: number;
    tabBarRendererPreTimeSignaturePadding?: number;
    rowContainerPadding?: number;
    scoreBeatGhostSpace?: number;
    scorePreNotePadding?: number;
    scorePreFingeringPadding?: number;
    scorePreAccidentalPadding?: number;
    scoreBendEndPadding?: number;
    scoreBendHoldOffset?: number;
    scoreBendHoldSize?: number;
    scoreHelperNotesEndPadding?: number;
    scoreHelperNotesEndPadding2?: number;
    scoreNoteBelowEffectSpacing?: number;
    tupletTextMargin?: number;
    tabClefLeftPadding?: number;
    alternateEndingsPaddingX?: number;
    alternateEndingsPaddingY?: number;
    alternateEndingsCloseLinePadding?: number;
    beatTimerPaddingX?: number;
    beatTimerPaddingY?: number;
    beatTimerMarginY?: number;
    bendNoteHeadElementPadding?: number;
    circleGlyphPadding?: number;
    scoreSlideLineEndPadding?: number;
    scoreSlideLineOffsetX?: number;
    scoreSlideLineOffsetY?: number;
    scoreWhammySimpleDipPadding?: number;
    scoreWhammySongBookPadding?: number;
    slashNoteHeadEffectSpacing?: number;
    tabPreNotesPadding?: number;
    tabNoteChordEffectSpacing?: number;
    tabWhammySimpleDipPadding?: number;
    tabWhammyTextPadding?: number;
    lineRangedGlyphSpacing?: number;
    lineRangedGlyphTopPadding?: number;
    lineRangedGlyphTopOffset?: number;
    lineRangedGlyphSize?: number;
    ottavaLineSize?: number;
    ottavaLineSpacing?: number;
    ottavaPaddingY?: number;
    numberedDashGlyphPadding?: number;
    stringNumberCirclePadding?: number;
    sustainPedalTextLinePadding?: number;
    sustainPedalStarLinePadding?: number;
    timeSignatureGhostParenthesisLeftPadding?: number;
    timeSignatureGhostParenthesisRightPadding?: number;
    tabBrushArpeggioOffset?: number;
    pictEdgeOfCymbalOffsetX?: number;
    arpeggioXOffset?: number;
    noteOrnamentBottomOffset?: number;
    numberedBeatNoteYTopPadding?: number;
    slashBeatNoteYTopPadding?: number;
    tupletOffset?: number;
    tabClefOffsetX?: number;
    tabNoteYTopOffset?: number;
    accentuationPadding?: number;
    articStaccatoAbovePaddingX?: number;
    articStaccatoAbovePaddingY?: number;
    barTempoValuePadding?: number;
    graceBeatPadding?: number;
    graceBeatPostBeatStretch?: number;
    scoreTremoloOffsetUp?: Map<Duration | keyof typeof Duration | Lowercase<keyof typeof Duration>, number>;
    scoreTremoloOffsetUpOther?: number;
    scoreTremoloOffsetDown?: Map<Duration | keyof typeof Duration | Lowercase<keyof typeof Duration>, number>;
    scoreTremoloOffsetDownOther?: number;
    tabTremoloOffsetX?: Map<Duration | keyof typeof Duration | Lowercase<keyof typeof Duration>, number>;
    tabTremoloXDefault?: number;
    tabPreBendPadding?: number;
    tabBendLabelYOffset?: number;
    tabSlideOffsetX?: number;
    stemUp?: Map<MusicFontSymbol | keyof typeof MusicFontSymbol | Lowercase<keyof typeof MusicFontSymbol>, SmuflStemInfoJson>;
    stemDown?: Map<MusicFontSymbol | keyof typeof MusicFontSymbol | Lowercase<keyof typeof MusicFontSymbol>, SmuflStemInfoJson>;
    repeatOffsetX?: Map<MusicFontSymbol | keyof typeof MusicFontSymbol | Lowercase<keyof typeof MusicFontSymbol>, number>;
    deadSlappedLineWidth?: number;
    targetDirectionGlyphHeight?: number;
    flagWidth?: number;
    ghostParenthesisSize?: number;
    leftHandTappingCircleScale?: number;
    multiBarRestWidth?: number;
    numberedNoteHeadWidth?: number;
    numberedNoteHeadHeight?: number;
    numberedTieEmptySize?: number;
    arpeggioWidth?: number;
    arpeggioArrowSize?: number;
    crescendoHeight?: number;
    barTempoHeight?: number;
    numberedDashGlyphWidth?: number;
    simileMarkSimpleWidth?: number;
    simileMarkDoubleWidth?: number;
    tupletSize?: number;
    graceFlagSizeX?: number;
    graceFlagSizeY?: number;
    flagStemSize?: number;
    brokenBarOffset?: number;
    scoreBarRendererBeamMaxDistance?: number;
    accidentalHeight?: number;
    dottedBarLineCircleRadius?: number;
    beatPaddingFlagEighthAndAbove?: number;
    beatPaddingOneHundredAndAbove?: number;
    barNumberMarginPaddingRight?: number;
    scoreSlideLineSizeX?: number;
    slashTieEmptyHeight?: number;
    slashTieEmptyWidth?: number;
    sustainPedalLineWidth?: number;
    tabBendArrowSize?: number;
    tabBendDashSize?: number;
    tabBendBendValueHeight?: number;
    tabBrushWidth?: number;
    tabBrushArrowSize?: number;
    tabRestInvisibleWidth?: number;
    tabSlideSizeX?: number;
    tabSlideSizeY?: number;
    tabTieEmptyHeight?: number;
    tabTieEmptyWidth?: number;
    tabWhammyPerHalfSize?: number;
    tabWhammyDashSize?: number;
    tieSize?: number;
    tieHeight?: number;
    bendSlurHeight?: number;
    timeSignatureNumberHeight?: number;
    barStemSizes?: Map<Duration | keyof typeof Duration | Lowercase<keyof typeof Duration>, number>;
    glyphTop?: Map<MusicFontSymbol | keyof typeof MusicFontSymbol | Lowercase<keyof typeof MusicFontSymbol>, number>;
    glyphBottom?: Map<MusicFontSymbol | keyof typeof MusicFontSymbol | Lowercase<keyof typeof MusicFontSymbol>, number>;
    /**
     * The widths of the bounding box for the respective glyphs.
     */
    glyphWidths?: Map<MusicFontSymbol | keyof typeof MusicFontSymbol | Lowercase<keyof typeof MusicFontSymbol>, number>;
    /**
     * The heights of the bounding box for the respective glyphs.
     */
    glyphHeights?: Map<MusicFontSymbol | keyof typeof MusicFontSymbol | Lowercase<keyof typeof MusicFontSymbol>, number>;
    chordDiagramPaddingX?: number;
    chordDiagramPaddingY?: number;
    chordDiagramCircleRadius?: number;
    chordDiagramStringSpacing?: number;
    chordDiagramFretSpacing?: number;
    chordDiagramNutHeight?: number;
    chordDiagramFretHeight?: number;
    targetDirectionGlyphScale?: number;
    dynamicsScale?: number;
    numberedKeySignatureScale?: number;
    ottavaScale?: number;
    pictEdgeOfCymbalScale?: number;
    trillLoopHeightToY?: number;
    barTempoSymbolYScale?: number;
    barTempoSymbolScale?: number;
    tuningGlyphCircleNumberScale?: number;
    tuningGlyphRowHeight?: number;
    tuningGlyphTextPadding?: number;
    tuningGlyphStringColumnWidth?: number;
    tuningGlyphEndPaddingX?: number;
    tripletFeelNoteScale?: number;
    tripletFeelTupletScale?: number;
    tripletFeelHeight?: number;
    tripletFeelYPadding?: number;
    tripletFeelBracketsHeightToY?: number;
    tripletFeelLeftNoteXPadding?: number;
    tripletFeelRightNoteXPadding?: number;
    tripletFeelCircleOffset?: number;
    tripletFeelCircleSize?: number;
    tripletFeelEqualsOffsetX?: number;
    tripletFeelEqualsOffsetY?: number;
    tripletFeelAugmentationOffsetX?: number;
    tripletFeelCloseParenthesisOffsetX?: number;
    scoreInfoFontSizeToHeight?: number;
    scoreWhammyFontSizeToOverflow?: number;
    lineBarRendererOverflowFontSiteToPadding?: number;
    lineBarRendererTupletFontSiteToPadding?: number;
    chordDiagramFontToRow?: number;
    jumpDirectionFontSizeToHeight?: number;
    tabBendFontSizeToHeight?: number;
    tabBendFontSizeToPadding?: number;
    barTempoTextPaddingScale?: number;
}
