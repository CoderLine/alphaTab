// <auto-generated>
// This code was auto-generated.
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
// </auto-generated>
import { MusicFontSymbol } from "@src/model/MusicFontSymbol";
import { SmuflStemInfoJson } from "@src/generated/SmuflStemInfoJson";
import { Duration } from "@src/model/Duration";
/**
 * This class holds all SMuFL metrics we use in alphaTab like sizes,
 * spacings etc.
 * @json
 * @json_declaration
 * @target web
 */
export interface SmuflMetricsJson {
    /**
     * The font size of the music font in pixel.
     * @internal
     */
    musicFontSize?: number;
    oneStaffSpace?: number;
    tabLineSpacing?: number;
    arrowShaftThickness?: number;
    barlineSeparation?: number;
    beamSpacing?: number;
    beamThickness?: number;
    bracketThickness?: number;
    dashedBarlineDashLength?: number;
    dashedBarlineGapLength?: number;
    dashedBarlineThickness?: number;
    hairpinThickness?: number;
    legerLineThickness?: number;
    legerLineExtension?: number;
    pedalLineThickness?: number;
    repeatBarlineDotSeparation?: number;
    repeatEndingLineThickness?: number;
    slurMidpointThickness?: number;
    staffLineThickness?: number;
    stemThickness?: number;
    thickBarlineThickness?: number;
    thinBarlineThickness?: number;
    thinThickBarlineSeparation?: number;
    tieMidpointThickness?: number;
    tupletBracketThickness?: number;
    effectBandSeparation?: number;
    numberedBarRendererBarSize?: number;
    numberedBarRendererBarSpacing?: number;
    numberedDashGlyphPadding?: number;
    numberedDashGlyphWidth?: number;
    lineRangedGlyphDashGap?: number;
    lineRangedGlyphDashSize?: number;
    preNoteEffectPadding?: number;
    postNoteEffectPadding?: number;
    stringNumberCirclePadding?: number;
    rowContainerPadding?: number;
    effectSpacing?: number;
    alternateEndingsPadding?: number;
    sustainPedalLinePadding?: number;
    tieHeight?: number;
    beatTimerPadding?: number;
    bendNoteHeadElementPadding?: number;
    ghostParenthesisWidth?: number;
    brokenBeamWidth?: number;
    tabWhammyTextPadding?: number;
    tabWhammyPerHalfHeight?: number;
    tabWhammyDashSize?: number;
    songBookWhammyDipHeight?: number;
    deadSlappedLineWidth?: number;
    leftHandTabTieWidth?: number;
    tabBendDashSize?: number;
    tabBendPerValueHeight?: number;
    simpleSlideWidth?: number;
    simpleSlideHeight?: number;
    stemUp?: Map<MusicFontSymbol | keyof typeof MusicFontSymbol | Lowercase<keyof typeof MusicFontSymbol>, SmuflStemInfoJson>;
    stemDown?: Map<MusicFontSymbol | keyof typeof MusicFontSymbol | Lowercase<keyof typeof MusicFontSymbol>, SmuflStemInfoJson>;
    repeatOffsetX?: Map<MusicFontSymbol | keyof typeof MusicFontSymbol | Lowercase<keyof typeof MusicFontSymbol>, number>;
    standardStemLength?: number;
    stemFlagOffsets?: Map<Duration | keyof typeof Duration | Lowercase<keyof typeof Duration>, number>;
    glyphTop?: Map<MusicFontSymbol | keyof typeof MusicFontSymbol | Lowercase<keyof typeof MusicFontSymbol>, number>;
    glyphBottom?: Map<MusicFontSymbol | keyof typeof MusicFontSymbol | Lowercase<keyof typeof MusicFontSymbol>, number>;
    glyphWidths?: Map<MusicFontSymbol | keyof typeof MusicFontSymbol | Lowercase<keyof typeof MusicFontSymbol>, number>;
    glyphHeights?: Map<MusicFontSymbol | keyof typeof MusicFontSymbol | Lowercase<keyof typeof MusicFontSymbol>, number>;
    tempoNoteScale?: number;
    tuningGlyphCircleNumberScale?: number;
    tuningGlyphStringColumnScale?: number;
    tripletFeelNoteScale?: number;
    tripletFeelTupletScale?: number;
    tripletFeelHeight?: number;
    tripletFeelYPadding?: number;
    tripletFeelBracketsHeightToY?: number;
    tripletFeelLeftNoteXPadding?: number;
    tripletFeelRightNoteXPadding?: number;
    tripletFeelCircleOffset?: number;
    tripletFeelCircleSize?: number;
    tripletFeelEqualsOffsetX?: number;
    tripletFeelEqualsOffsetY?: number;
    tripletFeelAugmentationOffsetX?: number;
    tripletFeelCloseParenthesisOffsetX?: number;
    chordDiagramPaddingX?: number;
    chordDiagramPaddingY?: number;
    chordDiagramCircleRadius?: number;
    chordDiagramStringSpacing?: number;
    chordDiagramFretSpacing?: number;
    chordDiagramNutHeight?: number;
    chordDiagramFretHeight?: number;
}
