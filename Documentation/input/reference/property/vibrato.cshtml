Title: Vibrato
JsName: vibrato
DataAttribute: data-vibrato-*
Category: Vibrato
Description: The Vibrato settings allow control how the different vibrato types are generated for audio. 
ShowInSideBar: false
Since: 0.9.4
---

@functions {
    IEnumerable<IDocument> GetDocumentsAtPath(string relativePath)
    {
        return Documents.Where(d => 
            string.Join("/", d.Get<object[]>(Keys.TreePath) ?? new object[0])
            .StartsWith(relativePath)
        );
    }
}

<h2>Description</h2>
<p>
    AlphaTab supports 4 types of vibratos, for each vibrato the amplitude and the wavelength can be configured. The amplitude controls how many semitones
    the vibrato changes the pitch up and down while playback. The wavelength controls how many midi ticks it will take to complete one up and down vibrato.
    The 4 vibrato types are: 
</p>

<ol>
    <li>Beat Slight - A fast vibrato on the whole beat. This vibrato is usually done with the whammy bar.</li>
    <li>Beat Wide - A slow vibrato on the whole beat. This vibrato is usually done with the whammy bar.</li>
    <li>Note Slight - A fast vibrato on a single note. This vibrato is usually done with the finger on the fretboard.</li>
    <li>Note Wide - A slow vibrato on a single note. This vibrato is usually done with the finger on the fretboard.</li>
</ol>

<h2>Vibrato Settings</h2>

<table class="table table-striped table-condensed type-table">
    <thead>
        <tr>
            <th>Setting</th>
            <th>Type</th>
            <th>Default</th>
            <th>Summary</th>
        </tr>
    </thead>    
    <tbody>   
        @foreach(IDocument child in GetDocumentsAtPath("reference/property/vibrato-"))
        {
            object[] childTreePath = child.Get<object[]>(Keys.TreePath);        
            string name = child.WithoutSettings.String(Keys.Title, childTreePath.Last().ToString());
            string jsName = child.String("JsName");
            string dataAttribute = child.String("DataAttribute");
            if(name.StartsWith("RenderingResources")) { name = name.Substring("RenderingResources".Length); }
            if(jsName.StartsWith("resources")) { jsName = jsName.Substring("resources".Length); }
            if(dataAttribute.StartsWith("data-resources")) { dataAttribute = dataAttribute.Substring("data-resources".Length); }

            <tr>
                <td>
                    <code>
                        @name
                        <span class="code-badge">.net</span>
                    </code>
                    <br />
                    <code>
                        @jsName
                        <span class="code-badge">JSON</span>
                    </code>
                    <br />
                    <code>
                        @dataAttribute
                        <span class="code-badge">HTML</span>
                    </code>
                </td>
                <td>
                    <code>
                        @Html.Raw(child.String("Type"))
                        <span class="code-badge">all</span>
                    </code>
                </td>
                <td>@Html.Raw(child.String("DefaultValue"))</td>
                <td>
                    @(child.String(DocsKeys.Description))
                </td>
            </tr>
        }    
    </tbody>
</table>

<h2>Example - C#</h2>

<pre>
<code class="language-csharp line-numbers">
var settings = Settings.Defaults; 
settings.Vibrato.NoteSlightLength = 240;
settings.Vibrato.BeatSlightLength = 120;
</code>
</pre>


<h2>Example - JavaScript</h2>

<pre>
<code class="language-javascript line-numbers">
var settings = {
    vibrato: {
        noteSlightLength: 240,
        beatSlightLength: 120
    }
};
var api = new alphaTab.platform.javaScript.AlphaTabApi(document.querySelector('#alphaTab'), settings);
var japi = $('#alphaTab').alphaTab(settings);
</code>
</pre>

<h2>Example - HTML</h2>

<pre>
<code class="language-html line-numbers">
&lt;div id="alphaTab" 
        data-vibrato-note-slight-length="240"
        data-vibrato-beat-slight-length="120"
&gt;&lt;/div&gt;
</code>
</pre>