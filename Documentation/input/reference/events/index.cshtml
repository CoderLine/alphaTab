Title: Events
Description: This section contains a list of all events that are signaled by alphaTab.
Order: 3
---

<p>@Html.Raw(Model.String(DocsKeys.Description))</p>

The following table contains events specific to the global alphaTab API. For the Web version of alphaTab, also event subscribing via DOM events is possible. 
For the other cases the events can be subscribed via registering a function on the API object.


<table class="table table-striped table-condensed reference-table">
    <thead>
        <tr>
            <th>Event</th>
            <th>Summary</th>
        </tr>
    </thead>
    
    <tbody>    
        @{
            IEnumerable<IDocument> propertyPages = Model.DocumentList(Keys.Children);
            IList<IGrouping<string, IDocument>> propertyPagesGroups = propertyPages
                        .GroupBy(x => x.String(DocsKeys.Category))
                        .OrderBy(x => x.Key)
                        .ToList();
            foreach(IGrouping<string, IDocument> categoryGroup in propertyPagesGroups)
            {
                <tr>
                    <th colspan="3">@categoryGroup.Key</th>
                </tr>
                
                @foreach(IDocument child in categoryGroup
                                            .OrderBy(x => x.Get<int>(DocsKeys.Order, 1000))
                                            .ThenBy(x => x.WithoutSettings.String(Keys.Title)))
                {
                    object[] childTreePath = child.Get<object[]>(Keys.TreePath);
                    string[] jsNames = child.String("JsName").Split(';');
                    string url = child.Get<bool>("Todo", false) ? "#todo" : Context.GetLink(child);

                    <tr>
                        <td>
                            <a href="@url">
                                <code class="code-badge code-badge-net">@(child.WithoutSettings.String(Keys.Title, childTreePath.Last().ToString())) <span>.net</span></code>
                                @for(int i = 0; i < jsNames.Length; i++) 
                                {
                                    <br />
                                    <code class="code-badge code-badge-js">@(jsNames[i]) <span>JavaScript</span></code>
                                }
                                <br /><code class="code-badge code-badge-html">@(child.String("DomName")) <span>DOM</span></code>
                                
                            </a>
                        </td>                   
                        <td>@(child.String(DocsKeys.Description))</td>
                    </tr>
                }
            }
        }
    </tbody>
</table>
