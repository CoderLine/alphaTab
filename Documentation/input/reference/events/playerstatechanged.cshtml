Title: PlayerStateChanged
JsName: addPlayerStateChanged();removePlayerStateChanged()
DomName: alphaTab.playerStateChanged
Category: Events - Player
Description: This event is fired when the playback state changed.
ShowInSideBar: false
Since: 0.9.4
---

<h2>Description</h2>
<p>
    This event is fired when the playback state changed. 
</p>

<h2>Types</h2>

<table class="table table-striped table-condensed type-table">
    <tbody>    
        <tr>
            <td><code class="code-badge code-badge-net">Action&lt;PlayerStateChangedEventArgs&gt; <span>.net</span></code></td>
        </tr>
        <tr>
            <td><code class="code-badge code-badge-js">function(e) <span>JavaScript</span></code></td>
        </tr>   
    </tbody>
</table>

<h2>Parameters</h2>

<table class="table table-striped table-condensed type-table">
    <thead>
        <tr>
            <th>Parameters</th>
            <th>Type</th>
            <th>Summary</th>
        </tr>
    </thead>
    <tbody>    
        <tr>
            <td><code class="code-badge code-badge-all">args <span>all</span></code></td>
            <td><code>AlphaTab.Audio.Synth.PlayerStateChangedEventArgs</code></td>
            <td>
                The information about the player state change event. 
            </td>
        </tr>  
    </tbody>
</table>

<h2>AlphaTab.Audio.Synth.PlayerStateChangedEventArgs Properties</h2>

<table class="table table-striped table-condensed type-table">
    <thead>
        <tr>
            <th>Property</th>
            <th>Type</th>
            <th>Summary</th>
        </tr>
    </thead>
    <tbody>    
        <tr>
            <td>
                <code class="code-badge code-badge-net">State <span>.net</span></code><br />
            </td>
            <td><code>AlphaTab.Audio.Synth.PlayerState</code></td>
            <td>
                The new state of the player. 
            </td>
        </tr>  
        <tr>
            <td>
                <code class="code-badge code-badge-js">state <span>JavaScript</span></code><br />
            </td>
            <td><code>int</code></td>
            <td>
                The new state of the player.
                <ul>
                    <li><code>0</code> - Paused</li>
                    <li><code>1</code> - Playing</li>
                </ul>
            </td>
        </tr>  
        <tr>
            <td>
                <code class="code-badge code-badge-net">Stopped <span>.net</span></code><br />
                <code class="code-badge code-badge-js">stopped <span>JavaScript</span></code>
            </td>
            <td><code>bool</code></td>
            <td>
                Whether the playback was fully stopped (including jump to start) or only paused.  
            </td>
        </tr>
    </tbody>
</table>

<h2>Example - C#</h2>

<pre>
<code class="language-csharp line-numbers">
var api = new AlphaTabApi<MyControl>(...);
api.PlayerStateChanged += args => 
{
    UpdatePlayerControls(args.State, args.Stopped);
};
</code>
</pre>


<h2>Example - JavaScript</h2>

<pre>
<code class="language-javascript line-numbers">
var api = new alphaTab.platform.javaScript.AlphaTabApi(document.querySelector('#alphaTab'));
api.addPlayerStateChanged(function(args) {
    updatePlayerControls(args.State, args.Stopped);
});
</code>
</pre>

<h2>Example - jQuery</h2>

<pre>
<code class="language-javascript line-numbers">
$('#alphaTab').on('alphaTab.playerStateChanged', function(e, args) {
    updatePlayerControls(args.State, args.Stopped);
});
</code>
</pre>

<h2>Example - HTML</h2>

<pre>
<code class="language-javaScript line-numbers">
document.querySelector('#alphaTab').addEventListener('alphaTab.playerStateChanged', function(e) {
    var args = e.detail;
    updatePlayerControls(args.State, args.Stopped);
}, false);
</code>
</pre>