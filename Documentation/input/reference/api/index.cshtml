Title: API
Description: This section contains a list of all API methods that allow interacting with alphaTab. 
Order: 2
---

<p>@Html.Raw(Model.String(DocsKeys.Description))</p>

The following table contains all the properties as they can be set on the general settings object.

<table class="table table-striped table-condensed reference-table">
    <thead>
        <tr>
            <th>Name</th>
            <th>Summary</th>
        </tr>
    </thead>
    
    <tbody>    
        @{
            IEnumerable<IDocument> propertyPages = Model.DocumentList(Keys.Children);
            IList<IGrouping<string, IDocument>> propertyPagesGroups = propertyPages
                        .GroupBy(x => x.String(DocsKeys.Category))
                        .OrderBy(x => x.Key)
                        .ToList();
            foreach(IGrouping<string, IDocument> categoryGroup in propertyPagesGroups)
            {
                <tr>
                    <th colspan="3">@categoryGroup.Key</th>
                </tr>
                
                @foreach(IDocument child in categoryGroup
                                            .OrderBy(x => x.Get<int>(DocsKeys.Order, 1000))
                                            .ThenBy(x => x.WithoutSettings.String(Keys.Title)))
                {
                    object[] childTreePath = child.Get<object[]>(Keys.TreePath);
                    string[] jsNames = child.String("JsName").Split(new []{';'}, StringSplitOptions.RemoveEmptyEntries);
                    string[] jqueryNames = child.String("jQueryName", "").Split(new[]{';'}, StringSplitOptions.RemoveEmptyEntries);
                    string url = child.Get<bool>("Todo", false) ? "#todo" : Context.GetLink(child);

                    <tr>
                        <td>
                            <a href="@url">
                                @if(!child.Get<bool>("JavaScriptOnly", false))
                                {
                                    <code>@(child.WithoutSettings.String(Keys.Title, childTreePath.Last().ToString())) <span class="code-badge">.net</span></code>
                                    <br />
                                }
                                @for(int i = 0; i < jsNames.Length; i++) 
                                {
                                    <code>@(jsNames[i]) <span class="code-badge">JavaScript</span></code>
                                    <br />
                                }       
                                @for(int i = 0; i < jqueryNames.Length; i++) 
                                {
                                    <code>@(jqueryNames[i]) <span class="code-badge">jQuery</span></code>
                                    <br />
                                }       
                            </a>
                        </td>
                        <td>@(child.String(DocsKeys.Description))</td>
                    </tr>
                }
            }
        }
    </tbody>
</table>
